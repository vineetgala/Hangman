C51 COMPILER V9.60.0.0   SERIAL                                                            04/11/2021 01:00:53 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SERIAL
OBJECT MODULE PLACED IN .\Objects\serial.obj
COMPILER INVOKED BY: D:\Vineet\2021 Spring Semester\EE337\Keil\C51\BIN\C51.EXE serial.c OPTIMIZE(8,SPEED) BROWSE DEBUG O
                    -BJECTEXTEND PRINT(.\Listings\serial.lst) TABS(2) OBJECT(.\Objects\serial.obj)

line level    source

   1          #include <at89c5131.h>
   2          
   3          bit tx_complete = 0,rx_complete = 0; //Bit flags for interrupts
   4          
   5          /**********************************************************
   6             uart_init(): 
   7            Initialization function to be completed
   8            Initializes UART peripheral for 8-bit transfer, 
   9            1 start and 1 stop bits. 
  10            
  11            Please write TH1 value for required baud rate
  12          ***********************************************************/  
  13          void uart_init(void)
  14          {
  15   1        TMOD=0x20;      //Configure Timer 1 in Mode 2
  16   1        TH1=243;          //Load TH1 to obtain require Baudrate (Refer Serial.pdf for calculations)
  17   1        SCON=0x50;      //Configure UART peripheral for 8-bit data transfer 
  18   1        TR1=1;                //Start Timer 1
  19   1        ES=1;                 //Enable Serial Interrupt
  20   1        EA=1;                 //Enable Global Interrupt
  21   1      }
  22          
  23          
  24          /**********************************************************
  25             transmit_char(<unsigned char ch>): 
  26            Transmits a character using UART
  27          ***********************************************************/  
  28          void transmit_char(unsigned char ch)
  29          {
  30   1        SBUF=ch;        //Load data in SBUF
  31   1        while(!tx_complete);      //Wait for tx_complete flag (interrupt to complete)
  32   1        tx_complete = 0;    //Clear tx_complete flag 
  33   1      }
  34          
  35          
  36          /**********************************************************
  37             transmit_string(<String pointer>): 
  38            Transmit a string using UART
  39          ***********************************************************/  
  40          void transmit_string(unsigned char *s)
  41          {
  42   1        while(*s != 0)
  43   1        {
  44   2            transmit_char(*s++);
  45   2        }
  46   1      }
  47          
  48          
  49          /**********************************************************
  50             receive_char(): 
  51            Receives a character through UART. Returns a 
  52            character.
  53          ***********************************************************/    
  54          unsigned char receive_char(void)
C51 COMPILER V9.60.0.0   SERIAL                                                            04/11/2021 01:00:53 PAGE 2   

  55          {
  56   1        unsigned char ch = 0;
  57   1        while(!rx_complete);        //Wait for rx_complete(interrupt to complete)
  58   1        rx_complete = 0;
  59   1        ch = SBUF;          //Read data from SBUF
  60   1        return ch;          //Return read character
  61   1      }
  62          
  63          
  64          /**********************************************************
  65             Serial_ISR(): 
  66            Interrupt service routine for UART interrupt.
  67            Determines whether it is a transmit or receive
  68            interrupt and raise corresponding flag.
  69            Transmit or receive functions (defined above) monitor
  70            for these flags to check if data transfer is done.
  71          ***********************************************************/  
  72          void serial_ISR(void) interrupt 4
  73          {
  74   1          if(TI==1)     //check whether TI is set
  75   1          {
  76   2            TI = 0;     //Clear TI flag
  77   2            tx_complete = 1;  //Set tx_complete flag indicating interrupt completion
  78   2          }
  79   1          else if(RI==1)      //check whether RI is set
  80   1          {
  81   2            RI = 0;     //Clear RI flag
  82   2            rx_complete = 1;  //Set rx_complete flag indicating interrupt completion
  83   2          }
  84   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     87    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
